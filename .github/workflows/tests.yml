name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - run: make setup
      - name: Check merge conflicts
        run: |
          git fetch origin main
          git merge --no-commit --no-ff origin/main || { echo "Merge conflict detected"; exit 1; }
          git merge --abort
      - run: make lint

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - run: make setup
      - name: Check merge conflicts
        run: |
          git fetch origin main
          git merge --no-commit --no-ff origin/main || { echo "Merge conflict detected"; exit 1; }
          git merge --abort
      - run: make test
